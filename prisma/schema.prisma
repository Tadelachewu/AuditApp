// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // This is the key change to fix the deployment error.
  // It tells Prisma to use the JS-based library engine, which is more portable.
  engineType = "library"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(AUDITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  audits         Audit[]
  generatedReports Report[]

  @@map("users")
}

model Audit {
  id        String   @id @default(cuid())
  name      String
  auditorId String
  startDate DateTime
  endDate   DateTime
  status    String

  auditor User   @relation(fields: [auditorId], references: [id])
  report  Report?

  @@map("audits")
}

model Checklist {
  id          String   @id @default(cuid())
  name        String
  category    String
  lastUpdated DateTime

  @@map("checklists")
}

model Document {
  id         String   @id @default(cuid())
  title      String
  type       String
  version    String
  uploadDate DateTime

  @@map("documents")
}

model Report {
  id                String   @id @default(cuid())
  auditId           String   @unique
  title             String
  generatedById     String
  date              DateTime
  status            String
  summary           String?
  complianceScore   Float?
  complianceDetails String?

  audit        Audit           @relation(fields: [auditId], references: [id])
  generatedBy  User            @relation(fields: [generatedById], references: [id])
  findings     ReportFinding[]

  @@map("reports")
}

model ReportFinding {
  id             Int    @id @default(autoincrement())
  reportId       String
  title          String
  recommendation String

  report Report @relation(fields: [reportId], references: [id], onDelete: Cascade)

  @@map("report_findings")
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String
  date        DateTime
  description String
  createdAt   DateTime @default(now())

  @@map("activities")
}

enum Role {
  ADMIN
  AUDITOR
}
