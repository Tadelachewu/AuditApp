// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  // The `engineType` is set to `library` to use the JS-based Prisma engine,
  // which is more portable and avoids issues with missing system libraries.
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(AUDITOR)
  audits    Audit[]
  reports   Report[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Audit {
  id        String    @id @default(cuid())
  name      String
  auditorId String
  auditor   User      @relation(fields: [auditorId], references: [id])
  startDate DateTime
  endDate   DateTime
  status    String    @default("Scheduled") // e.g., "Scheduled", "In Progress", "Completed"
  scope     String
  riskLevel RiskLevel
  reports   Report[]
}

model Checklist {
  id          String   @id @default(cuid())
  name        String
  category    String
  lastUpdated DateTime @updatedAt
}

model Document {
  id         String   @id @default(cuid())
  title      String
  type       String   // e.g., "Policy", "Procedure", "Evidence"
  version    String   @default("v1.0")
  uploadDate DateTime @default(now())
}

model Report {
  id                String          @id @default(cuid())
  auditId           String
  audit             Audit           @relation(fields: [auditId], references: [id])
  title             String
  generatedById     String
  generatedBy       User            @relation(fields: [generatedById], references: [id])
  date              DateTime        @default(now())
  status            String          @default("Draft") // e.g., "Draft", "Finalized"
  summary           String?
  complianceScore   Int?
  complianceDetails String?
  findings          ReportFinding[]
}

model ReportFinding {
  id             String          @id @default(cuid())
  reportId       String
  report         Report          @relation(fields: [reportId], references: [id])
  title          String
  recommendation String
  riskRating     FindingRiskRating
  status         FindingStatus
  owner          String
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String   // "Audit", "Checklist", "Report"
  date        DateTime
  description String
  createdAt   DateTime @default(now())
}


enum Role {
  ADMIN
  AUDITOR
  MANAGER
}

enum RiskLevel {
  LOW
  MEDIUM
  HIGH
}

enum FindingRiskRating {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum FindingStatus {
  OPEN
  IN_PROGRESS
  REMEDIATED
}
