// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Audit {
  id        String    @id @default(cuid())
  name      String
  auditor   String
  startDate DateTime  @map("start_date")
  endDate   DateTime  @map("end_date")
  status    String
  reports   Report[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("audits")
}

model Checklist {
  id          String   @id @default(cuid())
  name        String
  category    String
  lastUpdated DateTime @map("last_updated")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("checklists")
}

model Document {
  id         String   @id @default(cuid())
  title      String
  type       String
  version    String
  uploadDate DateTime @map("upload_date")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("documents")
}

model Report {
  id                String          @id @default(cuid())
  audit_id          String
  title             String
  generatedBy       String          @map("generated_by")
  date              DateTime
  status            String
  summary           String?
  complianceScore   Int?            @map("compliance_score")
  complianceDetails String?         @map("compliance_details")
  findings          ReportFinding[]
  audit             Audit           @relation(fields: [audit_id], references: [id], onDelete: Cascade)
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")

  @@index([audit_id])
  @@map("reports")
}

model ReportFinding {
  id             Int      @id @default(autoincrement())
  report_id      String
  title          String
  recommendation String
  report         Report   @relation(fields: [report_id], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@index([report_id])
  @@map("report_findings")
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String
  date        DateTime
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("activities")
}
