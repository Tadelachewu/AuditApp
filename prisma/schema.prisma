// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(AUDITOR)
  audits    Audit[]
  reports   Report[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Audit {
  id        String    @id @default(cuid())
  name      String
  auditor   User      @relation(fields: [auditorId], references: [id])
  auditorId String
  startDate DateTime
  endDate   DateTime
  status    String
  scope     String
  riskLevel RiskLevel
  reports   Report[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Checklist {
  id          String   @id @default(cuid())
  name        String
  category    String
  lastUpdated DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Document {
  id         String   @id @default(cuid())
  title      String
  type       String
  version    String
  uploadDate DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Report {
  id                String          @id @default(cuid())
  audit             Audit           @relation(fields: [auditId], references: [id])
  auditId           String
  title             String
  generatedBy       User            @relation(fields: [generatedById], references: [id])
  generatedById     String
  date              DateTime
  status            String
  summary           String?
  complianceScore   Int?
  complianceDetails String?
  findings          ReportFinding[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model ReportFinding {
  id             String            @id @default(cuid())
  report         Report            @relation(fields: [reportId], references: [id])
  reportId       String
  title          String
  recommendation String
  riskRating     FindingRiskRating
  status         FindingStatus
  owner          String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String
  date        DateTime
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  AUDITOR
  MANAGER
}

enum RiskLevel {
  HIGH
  MEDIUM
  LOW
}

enum FindingRiskRating {
  CRITICAL
  HIGH
  MEDIUM
  LOW
}

enum FindingStatus {
  OPEN
  IN_PROGRESS
  REMEDIATED
}
