// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "library" // Use the JS-based library engine to avoid native binary issues
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(AUDITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedAudits   Audit[]
  generatedReports Report[]
}

enum Role {
  ADMIN
  AUDITOR
}

model Audit {
  id        String   @id @default(cuid())
  name      String
  startDate DateTime
  endDate   DateTime
  status    String

  auditorId String
  auditor   User   @relation(fields: [auditorId], references: [id])

  reports Report[]
}

model Checklist {
  id          String   @id @default(cuid())
  name        String
  category    String
  lastUpdated DateTime
}

model Document {
  id         String   @id @default(cuid())
  title      String
  type       String
  version    String
  uploadDate DateTime
}

model Report {
  id                String   @id @default(cuid())
  title             String
  date              DateTime
  status            String
  summary           String?
  complianceScore   Int?
  complianceDetails String?

  auditId       String
  audit         Audit  @relation(fields: [auditId], references: [id])
  generatedById String
  generatedBy   User   @relation(fields: [generatedById], references: [id])

  findings ReportFinding[]
}

model ReportFinding {
  id             Int    @id @default(autoincrement())
  title          String
  recommendation String

  reportId String
  report   Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String
  date        DateTime
  description String
  createdAt   DateTime @default(now())
}
